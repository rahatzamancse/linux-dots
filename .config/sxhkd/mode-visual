##  
##   _        _                   
##  / |_ __  | |  __ _ _ __   ___ 
##  | | '_ \/ __)/ _` | '_ \ / _ \
##  | | | | \__ \ (_| | | | |  __/
##  |_|_| |_(   /\__,_|_| |_|\___|
##      |_|                  
##

## This keybinding combo is specifically made for BSPWM and VIM users.
## This has pseudo vim like modes to move windows around.
## I will make a documentation one day ðŸ˜….

# VISUAL MODE
# dir: Change focus
# num: Change desktop
# SUPER + dir: Move node
# SUPER + num: Send node to desktop
# SUPER + SHIFT + dir: Resize node
# SUPER + SHIFT + num:
# SUPER + CTRL + dir:
# SUPER + CTRL + num:
# SHIFT + dir: Preselection
# SHIFT + num: Send node to Desktop


### *** VISUAL MODE ***
# Get into this mode by: super + m
# After being inside the mode, think of the chords as only commands
# For example, Once you pressed super + m for the first time,
# super + m : {h,j,k,l} will become only {h,j,k,l}


## **Process Controls**
# In case there is an error and you are stuck in VISUAL mode
# Only reload keyboard shortcuts with sxhkd
super + shift + Escape
	pkill -USR1 -x sxhkd && dunstify -r 500 "SXHKD" "config reloaded"

# quit/restart bspwm
super + shift + {q,r}
	bspc {quit,wm -r} && dunstify -r 500 "BSPWM" "WM reloaded"

# close and a kill window
super + {_,shift + }w
	bspc node -{c,k}

# Lock the screen
super + Delete
	betterlockscreen -l
	
# Go to last window in current desktop
super + Tab
	bspc node -f last.local

## **Focusing**
# Focus on node
{h,j,k,l}
	dir={west,south,north,east};if ! bspc node -f $dir; then bspc monitor -f $dir; fi

{Left,Down,Up,Right}
	dir={west,south,north,east};if ! bspc node -f $dir; then bspc monitor -f $dir; fi


# focus the node for the given path jump
{p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# Go to last monitor
super + Escape
	bspc monitor -f last

# Go to last desktop in current monitor
super + grave
	bspc desktop -f last.local

# Go to last window in current desktop
super + Tab
	bspc node -f last.local


## **Single Window modes change and Movement**
# Move windows
super + {h,j,k,l}
	$HOME/.config/bspwm/scripts/windowmover.sh {west,south,north,east}
super + {Left,Down,Up,Right}
	$HOME/.config/bspwm/scripts/windowmover.sh {west,south,north,east}

# I think resizing with mouse is much better. Still leaving it...
super + shift + {h,j,k,l}
	$HOME/.config/bspwm/scripts/windowresize.sh {west,south,north,east}
super + shift + {Left,Down,Up,Right}
	$HOME/.config/bspwm/scripts/windowresize.sh {west,south,north,east}


## **Layout Manipulations**
# move current window to largest space or preselected area if there is one.
Return
	$HOME/.config/bspwm/scripts/windowpromoter.sh

# Create a new "master area", splitting the whole desktop instead of just windows.
super + Return
	bspc node -n @/

# Mirror and flip leaves of tree
super + {comma,period}
	bspc node @/ -F {horizontal,vertical}

# Rotate leaves of tree
super + shift + {period,comma}
	bspc node -R {90,270}

# Adjust gap size dynamically
i
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` + 5 ))
d
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` - 5 ))

# set gap size with mouse scroll
button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))

# Restore original gap
equal
	$HOME/.config/bspwm/scripts/reset-gap.sh

## **Desktops**
# Go to or move node to desktop
{_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

super + {1-9,0}
	bspc desktop -f '^{1-9,10}'

## **Preselection**
# preselect the direction
shift + {h,j,k,l}
	bspc node -p {west,south,north,east}
shift + {Left,Down,Up,Right}
	bspc node -p {west,south,north,east}

# cancel the preselection for the focused desktop
space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

# Exit visual mode
@Escape
	bspc node any.descendant_of.leaf -f && killall -e sxhkd; polybar-msg hook window-mode 1 > /dev/null && sxhkd &
super + m
	bspc node any.descendant_of.leaf -f && killall -e sxhkd; polybar-msg hook window-mode 1 > /dev/null && sxhkd &

